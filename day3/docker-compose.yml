version: '3.8'

services:
  # Flink JobManager
  jobmanager:
    image: flink:1.17.1-scala_2.12
    hostname: jobmanager
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - FLINK_PROPERTIES=jobmanager.rpc.address: jobmanager
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./flink-jobs:/opt/flink/jobs
      - ./flink-checkpoints:/tmp/flink-checkpoints
      - ./flink-savepoints:/tmp/flink-savepoints

  # Flink TaskManager
  taskmanager-1:
    image: flink:1.17.1-scala_2.12
    hostname: taskmanager-1
    container_name: flink-taskmanager-1
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 2
    environment:
      - FLINK_PROPERTIES=jobmanager.rpc.address: jobmanager\ntaskmanager.numberOfTaskSlots: 4
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./flink-jobs:/opt/flink/jobs
      - ./flink-checkpoints:/tmp/flink-checkpoints
      - ./flink-savepoints:/tmp/flink-savepoints

  # Kafka for source/sink
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-flink
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-flink
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  # Data generator service
  data-generator:
    build:
      context: ./data-generator
      dockerfile: Dockerfile
    container_name: flink-data-generator
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    volumes:
      - ./data-generator:/app

  # MySQL for CDC example
  mysql:
    image: mysql:8.0
    container_name: mysql-cdc
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: test_db
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
    command: --server-id=1 --log-bin=mysql-bin --binlog-format=ROW --gtid-mode=ON --enforce-gtid-consistency=ON
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql

  # Elasticsearch for sink example
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: elasticsearch-flink
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es-data:/usr/share/elasticsearch/data

  # Kibana for visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: kibana-flink
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

volumes:
  mysql-data:
  es-data: