version: '3.8'

services:
  # Kafka Cluster
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-integration
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-1:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-1-integration
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2

  kafka-2:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-2-integration
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2

  # Schema Registry
  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    container_name: schema-registry-integration
    depends_on:
      - kafka-1
      - kafka-2
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-1:29092,kafka-2:29093'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  # Flink Cluster
  jobmanager:
    image: flink:1.17.1-scala_2.12
    container_name: flink-jobmanager-integration
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - FLINK_PROPERTIES=jobmanager.rpc.address: jobmanager\nparallelism.default: 4\nstate.backend: rocksdb\nstate.backend.incremental: true\nstate.checkpoints.dir: file:///tmp/flink-checkpoints\nexecution.checkpointing.interval: 10s\nexecution.checkpointing.mode: EXACTLY_ONCE\nrestart-strategy: fixed-delay\nrestart-strategy.fixed-delay.attempts: 3\ntable.exec.source.idle-timeout: 30s
    volumes:
      - ./flink-jobs:/opt/flink/jobs
      - ./flink-checkpoints:/tmp/flink-checkpoints
      - ./flink-lib:/opt/flink/lib

  taskmanager:
    image: flink:1.17.1-scala_2.12
    container_name: flink-taskmanager-integration
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 2
    environment:
      - FLINK_PROPERTIES=jobmanager.rpc.address: jobmanager\ntaskmanager.numberOfTaskSlots: 8\ntaskmanager.memory.process.size: 2gb\ntaskmanager.memory.managed.fraction: 0.4\ntaskmanager.memory.task.heap.size: 1gb
    volumes:
      - ./flink-jobs:/opt/flink/jobs
      - ./flink-checkpoints:/tmp/flink-checkpoints
      - ./flink-lib:/opt/flink/lib

  # InfluxDB for time-series data
  influxdb:
    image: influxdb:2.7
    container_name: influxdb-integration
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: adminpass
      DOCKER_INFLUXDB_INIT_ORG: flink-org
      DOCKER_INFLUXDB_INIT_BUCKET: metrics
    volumes:
      - influxdb-data:/var/lib/influxdb2

  # Apache Superset for dashboards
  superset:
    image: apache/superset:latest
    container_name: superset-integration
    ports:
      - "8088:8088"
    environment:
      SUPERSET_SECRET_KEY: 'your-secret-key-here'
    volumes:
      - superset-data:/app/superset_home
    command: >
      sh -c "
      superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin &&
      superset db upgrade &&
      superset init &&
      superset run -h 0.0.0.0 -p 8088
      "

  # Event Generator
  event-generator:
    build:
      context: ./event-generator
      dockerfile: Dockerfile
    container_name: event-generator-integration
    depends_on:
      - kafka-1
      - kafka-2
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:29092,kafka-2:29093
    volumes:
      - ./event-generator:/app

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-integration
    depends_on:
      - kafka-1
      - kafka-2
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: integration-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:29092,kafka-2:29093
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081

volumes:
  influxdb-data:
  superset-data: